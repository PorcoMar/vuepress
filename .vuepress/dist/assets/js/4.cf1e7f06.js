(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{55:function(a,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"➣-yarn是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#➣-yarn是什么？","aria-hidden":"true"}},[a._v("#")]),a._v(" ➣ Yarn是什么？")]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("Yarn是什么？")]),s("p",[a._v("Yarn是由Facebook、Google、Exponent 和 Tilde 联合推出了一个新的 JS 包管理工具 ，正如官方文档中写的，Yarn 是为了弥补 npm 的一些缺陷而出现的。")])]),s("h3",{attrs:{id:"速度对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#速度对比","aria-hidden":"true"}},[a._v("#")]),a._v(" 速度对比")]),s("ul",[s("li",[s("p",[a._v("npm cnpm yarn对比，以安装vue-cli为例，")])]),s("li",[s("p",[a._v("耗时从少到多：\ncnpm：")])])]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("cnpm install vue"),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("vli "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save\n"),s("span",{attrs:{class:"token comment"}},[a._v("//用时：41600ms，包数量：1508")]),a._v("\n")])]),s("p",[a._v("yarn：")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("yarn add vue"),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("cli\n"),s("span",{attrs:{class:"token comment"}},[a._v("//用时：181200ms，包数量：742")]),a._v("\n")])]),s("p",[a._v("npm：")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("npm install vue"),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("cli "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save\n"),s("span",{attrs:{class:"token comment"}},[a._v("//用时：362400.5ms，包数量：727")]),a._v("\n")])]),s("h3",[a._v("速度小结")]),a._v("\ncnpm是最快的，不过有很多同行吐槽它的包文件过多和凌乱，包括其他一些问题（安装会出错等），因此国内有一些大的团队在内部并不使用cnpm。yarn，官方给出的说明是：快速、可靠、安全的依赖管理。至少从文件数量上看少了很多，而且安装过程中有美观的 CLI 输出信息（虽然这不重要）。\n"),s("h3",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 问题")]),s("ul",[s("li",[a._v("同一个项目，安装的时候无法保持一致性。由于package.json文件中版本号的特点，下面三个版本号在安装的时候代表不同的含义。")])]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("\n"),s("span",{attrs:{class:"token string"}},[a._v('"5.0.3"')]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{attrs:{class:"token string"}},[a._v('"~5.0.3"')]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{attrs:{class:"highlighted-line"}},[s("span",{attrs:{class:"token string"}},[a._v('"^5.0.3"')])]),a._v("\n")])]),s("ul",[s("li",[s("p",[a._v("“5.0.3”表示安装指定的5.0.3版本，“～5.0.3”表示安装5.0.X中最新的版本，“^5.0.3”表示安装5.X.X中最新的版本。这就麻烦了，常常会出现同一个项目，有的同事是OK的，有的同事会由于安装的版本不一致出现bug。")])]),s("li",[s("p",[a._v("安装的时候，包会在同一时间下载和安装，中途某个时候，一个包抛出了一个错误，但是npm会继续下载和安装包。因为npm会把所有的日志输出到终端，有关错误包的错误信息就会在一大堆npm打印的警告中丢失掉，并且你甚至永远不会注意到实际发生的错误。")])])]),s("h2",{attrs:{id:"➣-yarn优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#➣-yarn优点","aria-hidden":"true"}},[a._v("#")]),a._v(" ➣ Yarn优点")]),s("h3",{attrs:{id:"速度快-。速度快主要来自以下两个方面："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#速度快-。速度快主要来自以下两个方面：","aria-hidden":"true"}},[a._v("#")]),a._v(" 速度快 。速度快主要来自以下两个方面：")]),s("ul",[s("li",[s("p",[a._v("并行安装：无论 npm 还是 Yarn 在执行包的安装时，都会执行一系列任务。npm 是按照队列执行每个 package，也就是说必须要等到当前 package 安装完成之后，才能继续后面的安装。而 Yarn 是异步执行所有任务，提高了性能。")])]),s("li",[s("p",[a._v("离线模式：如果之前已经安装过一个软件包，用Yarn再次安装时之间从缓存中获取，就不用像npm那样再从网络下载了。")])])]),s("h3",{attrs:{id:"安装版本统一："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装版本统一：","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装版本统一：")]),s("ul",[s("li",[a._v("为了防止拉取到不同的版本，Yarn 有一个锁定文件 (lock file) 记录了被确切安装上的模块的版本号。每次只要新增了一个模块，Yarn 就会创建（或更新）yarn.lock 这个文件。这么做就保证了，每一次拉取同一个项目依赖时，使用的都是一样的模块版本。npm 其实也有办法实现处处使用相同版本的 packages，但需要开发者执行 npm shrinkwrap 命令。这个命令将会生成一个锁定文件，在执行 npm install 的时候，该锁定文件会先被读取，和 Yarn 读取 yarn.lock 文件一个道理。npm 和 Yarn 两者的不同之处在于，Yarn 默认会生成这样的锁定文件，而 npm 要通过 shrinkwrap 命令生成 npm-shrinkwrap.json 文件，只有当这个文件存在的时候，packages 版本信息才会被记录和更新。")])]),s("h3",{attrs:{id:"更简洁的输出："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更简洁的输出：","aria-hidden":"true"}},[a._v("#")]),a._v(" 更简洁的输出：")]),s("ul",[s("li",[s("p",[a._v("npm 的输出信息比较冗长。在执行 npm install 的时候，命令行里会不断地打印出所有被安装上的依赖。相比之下，Yarn 简洁太多：默认情况下，结合了 emoji直观且直接地打印出必要的信息，也提供了一些命令供开发者查询额外的安装信息。")])]),s("li",[s("p",[a._v("多注册来源处理：所有的依赖包，不管他被不同的库间接关联引用多少次，安装这个包时，只会从一个注册来源去装，要么是 npm 要么是 bower, 防止出现混乱不一致。")])]),s("li",[s("p",[a._v("更好的语义化： yarn改变了一些npm命令的名称，比如 yarn add/remove，感觉上比 npm 原本的 install/uninstall 要更清晰。")])])]),s("h3",{attrs:{id:"yarn和npm命令对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn和npm命令对比","aria-hidden":"true"}},[a._v("#")]),a._v(" Yarn和npm命令对比")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("npm install "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn \nnpm install taco "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn add taco\nnpm uninstall taco "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn remove taco\n"),s("span",{attrs:{class:"highlighted-line"}},[a._v("npm install taco "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save"),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("dev "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn add taco "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("dev")]),a._v("npm update "),s("span",{attrs:{class:"token operator"}},[a._v("--")]),a._v("save "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn upgrade\nnpm run dev "),s("span",{attrs:{class:"token operator"}},[a._v("===")]),a._v(" yarn dev\n")])]),s("h3",{attrs:{id:"yarn-更换为淘宝镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yarn-更换为淘宝镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" yarn 更换为淘宝镜像")]),s("p",[a._v("下载yarn")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("npm install yarn "),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("g\n")])]),s("p",[a._v("查看下载源")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("yarn config "),s("span",{attrs:{class:"token keyword"}},[a._v("get")]),a._v(" registry\n")])]),s("p",[a._v("更换为淘宝源")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("yarn config "),s("span",{attrs:{class:"token keyword"}},[a._v("set")]),a._v(" registry https"),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{attrs:{class:"token operator"}},[a._v("/")]),s("span",{attrs:{class:"token operator"}},[a._v("/")]),a._v("registry"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("npm"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("taobao"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org\n")])]),s("p",[a._v("初始化项目")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("yarn init "),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("y\n")])]),s("p",[a._v("更新模块：")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("yarn upgrade xxx "),s("span",{attrs:{class:"token comment"}},[a._v("// 更新")]),a._v("\n")])])])}],!1,null,null,null);t.default=r.exports}}]);